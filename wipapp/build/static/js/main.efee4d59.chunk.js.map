{"version":3,"sources":["components/Header.js","components/pages/Landing.js","components/pages/About.js","components/shop/FoodList.js","components/shop/Shop.js","components/chatbot/Message.js","components/chatbot/Card.js","components/chatbot/QuickReply.js","components/chatbot/QuickReplies.js","components/chatbot/Authenticate.js","components/chatbot/Attachment.js","components/chatbot/Chatbot.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","style","height","className","to","id","Landing","React","Component","About","FoodList","color","backgroundColor","padding","fontFamily","Shop","Message","props","handleclick","value","document","getElementById","innerHTML","target","speaks","href","text","opt","map","info","width","marginTop","marginLeft","marginBottom","textAlign","fontWeight","fontSize","type","onClick","Card","paddingRight","float","alt","payload","fields","header","stringValue","src","image","description","price","rel","link","QuickReply","reply","structValue","margin","paddingLeft","event","click","paddingTop","Authenticate","useState","ShowLoginForm","setShowLoginForm","ShowRegForm","setShowRegForm","username","password","email","getUserNameValue","getPaawordValue","handleLogIn","a","preventDefault","axios","post","then","res","localStorage","setItem","data","token","access","catch","error","response","status","handleReg","ChangeLog","ChangeReg","display","placeholder","onChange","FileUpload","setFile","uploadWithFormData","file","contentType","setResponse","formData","FormData","append","msg","console","log","url","method","headers","Authorization","getItem","alignItems","files","cookies","Cookies","Chatbot","_handleInputKeyPress","bind","_handleQuickReplyPayload","hide","show","state","messages","showBot","shopWelcomeSent","undefined","get","set","uuid","path","queryText","check_error","config","says","auth","multiSays","this","setState","Object","keys","length","key","eventName","userID","fulfillmentMessages","x","Promise","resolve","setTimeout","messagesEnd","scrollIntoView","behavior","talkInput","focus","stopPropagation","cards","card","i","message","df_text_query","returnedMessages","renderOneMessage","e","position","right","bottom","overflow","renderMessages","ref","el","borderRadius","input","onKeyPress","clear","withRouter","App","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.efee4d59.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Header = () => (\r\n  \r\n  <nav style ={{ height: 80}} className=\"card-panel cyan\">\r\n      <div className=\"nav-wrapper\">\r\n          <Link to={'/'}  className=\"brand-logo\"></Link>\r\n          <ul id=\"nav-mobile\"  className=\"right hide-on-med-and-down\" >\r\n              <li ><Link to={'/shop'}></Link></li>\r\n              <li ><Link to={'/about'}></Link></li>\r\n          </ul>\r\n      </div>\r\n  </nav>\r\n  \r\n)\r\n\r\nexport default Header;","import React from 'react';\r\n\r\n// const Landing = () => \r\n//     (\r\n//         <div style={{textAlign: 'center'}}>\r\n\r\n//             <h1>Welcome to foody website!</h1>\r\n//         Feel free to browse over all of our list of foods with the help of our chatbot\r\n//         </div>\r\n    \r\n//     )\r\n\r\n// export default Landing;\r\n\r\nclass Landing extends React.Component {  \r\n    render() {  \r\n      const landingPage = {  \r\n        color: \"Black\",  \r\n        backgroundColor: \"lightyellow\",  \r\n        padding: \"20px\",  \r\n        fontFamily: \"Arial\"  \r\n      };  \r\n      return (  \r\n        // <div>  \r\n        //     <div style={{ textAlign: 'center'}}>\r\n              \r\n        //         <div style={landingPage}>J&T Express</div>\r\n        //         </div>\r\n                \r\n        <p>Demo Chatbot </p>  \r\n        \r\n        //</div>  \r\n      );  \r\n    }  \r\n  }  \r\n  export default Landing;  ","import React from 'react';\r\n\r\nconst About = () => \r\n    (\r\n        <div><h1>About our services and products</h1>\r\n        Background of Services \r\n        </div>\r\n    )\r\n\r\nexport default About;","\r\nimport React from 'react';  \r\nimport ReactDOM from 'react-dom';  \r\n  \r\nclass FoodList extends React.Component {  \r\n  render() {  \r\n    const descFoodList = {  \r\n      color: \"Black\",  \r\n      backgroundColor: \"lightyellow\",  \r\n      padding: \"10px\",  \r\n      fontFamily: \"Arial\"  \r\n    };  \r\n    return (  \r\n      <div>  \r\n      <h6 style={descFoodList}>Craving for something?</h6>  \r\n      <p>These all our the varieties of our list of food that we have.</p>  \r\n      </div>  \r\n    );  \r\n  }  \r\n}  \r\nexport default FoodList;  ","import React from 'react';\r\nimport FoodList from './FoodList';\r\n\r\nconst Shop = () => \r\n    (\r\n        <div>\r\n            <h4>Shipping</h4> \r\n            <FoodList/>\r\n        </div>\r\n    )\r\n\r\nexport default Shop;","import React from 'react';\r\nimport \"./Message.css\";\r\n\r\nconst Message = (props) => {\r\n    const handleclick = (value) =>{\r\n        document.getElementById(\"user_says\").innerHTML = \"\";\r\n        document.getElementById(\"user_says\").value = value.target.innerHTML;\r\n    }\r\n    return (\r\n        <div className=\"chatbot-outer-frame\">\r\n            <div className=\"chatbot-inner-frame\">\r\n                <div >\r\n                    \r\n                    {props.speaks==='h' &&\r\n                    <div>\r\n                        <a href=\"/\">{props.speaks}</a>\r\n                    </div>\r\n                    }\r\n                    <div >\r\n                      <span >\r\n                        {props.text}\r\n                      </span>\r\n                    </div>\r\n                    {props.speaks==='z' &&\r\n                    <div>\r\n                        <a href=\"/\" >{props.speaks}</a>\r\n                    </div>\r\n                    }\r\n                    {\r\n                    props.opt?props.opt.map((info) =>\r\n                            <button style={{\r\n                                width       : \"200px\",\r\n                                marginTop   : \"5px\",\r\n                                marginLeft  : \"5px\",\r\n                                marginBottom: \"5px\",\r\n                                textAlign   : 'center',\r\n                                fontWeight  : 'bold',\r\n                                fontSize    : 10\r\n                            }} type='button' onClick={handleclick} className=\"btn btn-secondary \" key={info}>{info}</button>)\r\n                        :null\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div  style={{ height: 270, paddingRight:30, float: 'left'}}>\r\n            <div className=\"card\">\r\n                <div className=\"card-image\" style={{ width: 240}}>\r\n                    <img alt={props.payload.fields.header.stringValue} src={props.payload.fields.image.stringValue} />\r\n                    <span className=\"card-title\">{props.payload.fields.header.stringValue}</span>\r\n                </div>\r\n                <div className=\"card-content\">\r\n                    {props.payload.fields.description.stringValue}\r\n                    <p> <a href=\"/\">{props.payload.fields.price.stringValue}</a></p>\r\n                </div>\r\n                <div className=\"card-action\">\r\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={props.payload.fields.link.stringValue}>GET NOW</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\n\r\n\r\nconst QuickReply = (props) => {\r\n    if (props.reply.structValue.fields.payload) {\r\n        return (\r\n            //className=\"waves-effect waves-light btn grey\"\r\n            <a style={{ margin: 1, backgroundColor: 'black',fontSize: '7px', paddingLeft: '10px'}} href=\"/\" className=\"waves-effect waves-light btn flat\"\r\n               onClick={(event) =>\r\n                   props.click(\r\n                       event,\r\n                       props.reply.structValue.fields.payload.stringValue,\r\n                       props.reply.structValue.fields.text.stringValue\r\n                   )\r\n               }>\r\n                {props.reply.structValue.fields.text.stringValue}\r\n            </a>\r\n        );\r\n    } else {\r\n        return (\r\n            <a style={{ margin: 3, backgroundColor: 'black',fontSize: '7px', paddingLeft: '10px',paddingTop: '6px', fontWeight: 'bold'}} href={props.reply.structValue.fields.link.stringValue}\r\n               className=\"btn-floating btn-large waves-effect waves-light red\">\r\n                {props.reply.structValue.fields.text.stringValue}\r\n            </a>\r\n        );\r\n    }\r\n\r\n};\r\n\r\nexport default QuickReply;","import React, { Component } from 'react';\r\nimport QuickReply from './QuickReply';\r\n\r\nclass QuickReplies extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this._handleClick = this._handleClick.bind(this);\r\n    }\r\n\r\n    _handleClick(event, payload, text) {\r\n        this.props.replyClick(event, payload, text);\r\n    }\r\n\r\n    renderQuickReply(reply, i) {\r\n        return <QuickReply key={i} click={this._handleClick} reply={reply} />;\r\n    }\r\n\r\n    renderQuickReply(reply, i) {\r\n        return <QuickReply key={i} click={this._handleClick} reply={reply} />;\r\n    }\r\n\r\n    renderQuickReplies(quickReplies) {\r\n        if (quickReplies) {\r\n            return quickReplies.map((reply, i) => {\r\n                    return this.renderQuickReply(reply, i);\r\n                }\r\n            )\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    //Lavender\r\n\r\n    //className=\"col s12 m8 offset-m2 l6 offset-l3\"\r\n    //className=\"card-panel grey lighten-5 z-depth-1\"\r\n    render() {\r\n        return (\r\n            <div >\r\n                <div >\r\n                    <div  style = {{backgroundColor: 'white'}}>\r\n                    {/* className=\"col s2\" */}\r\n                    {/* className=\"col s10\" */}\r\n                        <div >\r\n                            <a href=\"/\"  className=\"btn-floating btn-small waves-effect waves-light blue\">{this.props.speaks}</a>\r\n                        </div>\r\n                        <div id=\"quick-replies\" style = {{fontSize: '9px', paddingTop: '6px'}}>\r\n                            {this.props.text && <p>\r\n                                {this.props.text.stringValue}\r\n                            </p>\r\n                            }\r\n                            {this.renderQuickReplies(this.props.payload)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuickReplies;","import React, {useState}from 'react';\r\nimport axios from 'axios/index';\r\n\r\nfunction Authenticate() {\r\n const [ShowLoginForm,setShowLoginForm]=useState(false)\r\n const [ShowRegForm,setShowRegForm]=useState(false)\r\n\r\n const divStyle = {\r\n    marginLeft: '14px',\r\n    padding: '10px',\r\n    display: \"flex\", \r\n  };\r\n\r\n var username = '';\r\n var password = '';\r\n var email    = '';\r\n\r\n const getUserNameValue = (event)=>{\r\n    username = event.target.value;\r\n    };\r\n    \r\n const getPaawordValue = (event)=>{\r\n    password = event.target.value;\r\n    };\r\n    \r\n const getEmailValue = (event)=>{\r\n    email = event.target.value;\r\n    };\r\n\r\n const handleLogIn = async (event) => {\r\n    event.preventDefault();\r\n    const res = await axios.post('http://127.0.0.1:8000/wipchat/login/',  {\r\n        \"username\": username,\r\n        \"password\": password\r\n    }).then(function (res) {\r\n        localStorage.setItem(\"Token\", res.data.token.access);            \r\n        document.getElementById(\"message\").innerHTML = \"LogIn Done SuccessFully ! Please Proceed to Asked Questions\"\r\n        setShowLoginForm(false);\r\n        setShowRegForm(false);\r\n    }\r\n    ).catch(function (error) {\r\n            if(error.response.status==404){\r\n                document.getElementById(\"message\").innerHTML = \"LogIn Failed Due To Invalid Credentials Please Try Again.\"\r\n            }\r\n    });\r\n }\r\n\r\n const handleReg = async (event) => {\r\n    event.preventDefault();\r\n    const res = await axios.post('http://127.0.0.1:8000/wipchat/register/',  {\r\n        \"email\"     : email,\r\n        \"username\"  : username,\r\n        \"password\"  : password\r\n    }).then(function (res) {\r\n        if (res.data.status === true)\r\n        {\r\n            setShowLoginForm(true);\r\n            setShowRegForm(false);\r\n            document.getElementById(\"message\").innerHTML = \"Registration Done Successfully. Please Proceed With Log In !\"\r\n        }\r\n        else\r\n        {\r\n            document.getElementById(\"message\").innerHTML = \"Please Provide Valid Email And Password!\"\r\n        }\r\n    }\r\n    ).catch(function (error) {\r\n        document.getElementById(\"message\").innerHTML = error\r\n    });\r\n }\r\n\r\n const ChangeLog = async (event) => {\r\n    event.preventDefault();\r\n    setShowLoginForm(true);\r\n    setShowRegForm(false);\r\n }\r\n\r\n const ChangeReg = async (event) => {\r\n    event.preventDefault();\r\n    setShowLoginForm(false);\r\n    setShowRegForm(true);\r\n }\r\n\r\n  return (\r\n      \r\n      <div>\r\n           <div>\r\n            <div style={divStyle}>\r\n                    <button type=\"button\" onClick={ChangeLog} className=\"btn btn-secondary btn-block\">LOGIN</button>\r\n                    <button type=\"button\" onClick={ChangeReg} style={{marginLeft: '10px'}} className=\"btn btn-secondary btn-block\">REGISTER</button>\r\n                </div>\r\n                <div id='message' style={{color: 'green', marginTop : \"5px\", marginLeft : \"22px\", marginBottom: \"10px\"}}>\r\n                </div>\r\n            </div>\r\n        {\r\n            \r\n            ShowLoginForm?\r\n            (\r\n            <div className=\"container\">\r\n            <div className=\"form-box\">\r\n              <div className=\"body-form\">\r\n               <form>\r\n                    <div className=\"input-group mb-3\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">Please insert your username ?</span>\r\n                    </div>\r\n                    <input type=\"text\" className=\"form-control\" id='username' placeholder=\"Username\" onChange={getUserNameValue}/>\r\n                    </div>\r\n                    <div className=\"input-group mb-3\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">Please Insert Your Password ?</span>\r\n                    </div>\r\n                    <input type=\"text\" className=\"form-control\"  placeholder=\"Password\" onChange={getPaawordValue}/>\r\n                    </div>\r\n                    <button type=\"button\" onClick={handleLogIn} className=\"btn btn-secondary btn-block\">LOGIN</button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n           </div>):\r\n           null\r\n        }\r\n        \r\n        {\r\n            ShowRegForm?\r\n            (\r\n                <div className=\"container\">\r\n                <div className=\"form-box\">\r\n                  <div className=\"body-form\">\r\n                   <form>\r\n                        <div className=\"input-group mb-3\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\">Please insert your Email ?</span>\r\n                            </div>\r\n                            <input type=\"text\" className=\"form-control\" id='email' placeholder=\"email\" onChange={getEmailValue}/>\r\n                        </div>\r\n                        <div className=\"input-group mb-3\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\">Please Insert Your Username ?</span>\r\n                            </div>\r\n                            <input type=\"text\" className=\"form-control\"  placeholder=\"username\" onChange={getUserNameValue}/>\r\n                        </div>\r\n                        <div className=\"input-group mb-3\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\">Please Insert Your Password ?</span>\r\n                            </div>\r\n                            <input type=\"text\" className=\"form-control\"  placeholder=\"password\" onChange={getPaawordValue}/>\r\n                        </div>\r\n                        <button type=\"button\" onClick={handleReg} className=\"btn btn-secondary btn-block\">REGISTER</button>\r\n                    </form>\r\n                  </div>\r\n                  {/* <div id='message' style={{color: 'green', marginTop : \"5px\", marginBottom : \"5px\"}}>\r\n                  </div> */}\r\n                </div>\r\n               </div>\r\n            ):null\r\n        }\r\n       \r\n            \r\n      </div> \r\n\r\n  )\r\n}\r\n\r\nexport default Authenticate","import React, {useState}from 'react';\r\nimport axios from 'axios';\r\n\r\nconst API_BASE = \"http://127.0.0.1:8000\"\r\n\r\nfunction submitForm(contentType, data, setResponse) {\r\n\r\naxios({\r\n    url: `${API_BASE}/wipchat/fileupload/`,\r\n    method: 'POST',\r\n    data: data,\r\n    headers: {\r\n    'Content-Type': contentType,\r\n    Authorization: `Bearer ${localStorage.getItem(\"Token\")}`\r\n    }\r\n    }).then((response) => {\r\n        setResponse(response.data);\r\n        document.getElementById(\"filemessage\").innerHTML = response.data.response\r\n        document.getElementById(\"file\").value = \"\"\r\n    }).catch((error) => {\r\n        document.getElementById(\"filemessage\").innerHTML = 'Problem In File Uploaded, Dont Forget to LogIn !'\r\n        document.getElementById(\"file\").value = \"\"\r\n        setResponse(\"error\");\r\n    })\r\n}\r\n\r\nfunction FileUpload() {\r\n    // State to store uploaded file\r\n    const [file, setFile] = React.useState(\"\");\r\n\r\n    function uploadWithFormData(file){\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n        submitForm(\"multipart/form-data\", formData, (msg) => console.log(msg));\r\n    }\r\n  \r\n    // Handles file upload event and updates state\r\n    function handleUpload(event) {\r\n      setFile(event.target.files[0]);\r\n      uploadWithFormData(event.target.files[0]);\r\n    }\r\n  \r\n    return (\r\n        <div>\r\n        <input id=\"file\" style=\r\n            {{\r\n            display: 'inline-block',\r\n            alignItems: 'flex-start',\r\n            }} type=\"file\" onChange={handleUpload} />\r\n        <div id = \"filemessage\"></div>\r\n        </div>\r\n    );\r\n  }\r\n\r\nexport default FileUpload\r\n","import React, { Component } from 'react';\r\nimport axios from \"axios/index\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nimport Cookies from 'universal-cookie';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport Message from './Message';\r\nimport Card from './Card';\r\nimport QuickReplies from './QuickReplies';\r\nimport Options from '../Options/Options';\r\nimport Authenticate from './Authenticate';\r\nimport FileUpload from './Attachment';\r\n\r\nimport \"./Chatbot.css\";\r\n\r\nconst cookies = new Cookies();\r\n\r\nclass Chatbot extends Component {\r\n    messagesEnd;\r\n    talkInput;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this._handleInputKeyPress = this._handleInputKeyPress.bind(this);\r\n        this._handleQuickReplyPayload = this._handleQuickReplyPayload.bind(this);\r\n        this.hide = this.hide.bind(this);\r\n        this.show = this.show.bind(this);\r\n        \r\n        this.state = {\r\n            messages: [],\r\n            showBot: true,\r\n            shopWelcomeSent: false\r\n        };\r\n        if (cookies.get('userID') === undefined) {\r\n            cookies.set('userID', uuid(), { path: '/' });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    async df_text_query (queryText) {\r\n        let check_error = false\r\n        const config = {\r\n            headers: { Authorization: `Bearer ${localStorage.getItem(\"Token\")}`}\r\n        };\r\n        let says = {\r\n            speaks: 'user',\r\n            msg: {\r\n                text : {\r\n                    text: queryText\r\n                },\r\n                auth: false\r\n            }\r\n        }\r\n\r\n        let multiSays = {}\r\n\r\n        this.setState({ messages: [...this.state.messages, says]});\r\n        const res = await axios.post('http://127.0.0.1:8000/wipchat/askme/',  {msg: queryText}, \r\n            config).then(function (res) {\r\n                if(typeof res.data.response === 'object')\r\n                {\r\n                    if (Object.keys(res.data.response).length > 2)\r\n                    {\r\n                        for (var key in res.data.response)\r\n                        {\r\n                            multiSays[key] = \r\n                            {\r\n                                speaks : 'bot',\r\n                                msg : \r\n                                {\r\n                                    text :\r\n                                    {\r\n                                        text: res.data.response[key].text\r\n                                    },\r\n                                    opt  : res.data.response[key].opt,\r\n                                    auth : false\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        says = {\r\n                            speaks: 'bot',\r\n                            msg: {\r\n                                text : {\r\n                                    text: res.data.response.res\r\n                                },\r\n                                opt : res.data.response.opt,\r\n                                auth: false\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    says = {\r\n                        speaks: 'bot',\r\n                        msg: {\r\n                            text : {\r\n                                text: res.data.response\r\n                            },\r\n                            auth: false\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            ).catch(function (error) {\r\n                    if(error.response.status==401){\r\n                        says = {\r\n                            speaks: 'bot',\r\n                            msg: {\r\n                                text : {\r\n                                        text: 'Please sign in with your email or register if you have not registered yet'\r\n                                        },\r\n                                auth : true\r\n                            }\r\n                        }\r\n                        check_error = true\r\n                    }\r\n        });\r\n\r\n        if (Object.keys(multiSays).length > 1 && check_error === false)\r\n        {\r\n            for (var key in multiSays)\r\n            {\r\n                this.setState({ messages: [...this.state.messages, multiSays[key] ]});\r\n            }\r\n        }\r\n        else\r\n        {\r\n            this.setState({ messages: [...this.state.messages, says]});\r\n        }\r\n\r\n    };\r\n\r\n    \r\n\r\n\r\n    async df_event_query(eventName) {\r\n\r\n        const res = await axios.post('/api/df_event_query',  {event: eventName, userID: cookies.get('userID')});\r\n\r\n        for (let msg of res.data.fulfillmentMessages) {\r\n            let says = {\r\n                speaks: 'bot',\r\n                msg: msg\r\n            }\r\n\r\n            this.setState({ messages: [...this.state.messages, says]});\r\n        }\r\n    };\r\n\r\n\r\n    resolveAfterXSeconds(x) {\r\n        return new Promise(resolve => {\r\n            setTimeout(() => {\r\n                resolve(x);\r\n            }, x * 5000);\r\n        })\r\n    }\r\n\r\n    async componentDidMount() {\r\n        // this.df_event_query('Welcome');\r\n       \r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\r\n        if ( this.talkInput ) {\r\n            this.talkInput.focus();\r\n        }\r\n    }\r\n\r\n    show(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.setState({showBot: true});\r\n    }\r\n\r\n    hide(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.setState({showBot: false});\r\n    }\r\n\r\n    _handleQuickReplyPayload(event, payload, text) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        // switch (payload) {\r\n        //     case 'recommended_yes':\r\n        //         this.df_event_query('SHOW_RECOMMENDATIONS');\r\n        //         break;\r\n        //     case 'training_masterclass':\r\n        //         this.df_event_query('MASTERCLASS');\r\n        //         break;\r\n        //     default:\r\n        //         this.df_text_query(text)\r\n        //         break;\r\n        // }\r\n    }\r\n\r\n\r\n\r\n    renderCards(cards) {\r\n        return cards.map((card, i) => <Card key={i} payload={card.structValue}/>);\r\n    }\r\n\r\n\r\n    renderOneMessage(message, i) {\r\n        if (message.msg.opt) {\r\n            return <Message key={i} speaks={message.speaks} text={message.msg.text.text}  opt={message.msg.opt} df_text_query = {this.df_text_query} />;\r\n        }\r\n        else if (message.msg && message.msg.text && message.msg.text.text) {\r\n            if (message.msg.auth === false)\r\n                {\r\n                    return <Message key={i} speaks={message.speaks} text={message.msg.text.text }/>;\r\n                }\r\n            else\r\n                {\r\n                    return <div  key={i}>\r\n                    <Message key={i} speaks={message.speaks} text={message.msg.text.text }/>\r\n                    <Authenticate />\r\n                    </div>\r\n                }\r\n        }\r\n    }\r\n\r\n    renderMessages(returnedMessages) {\r\n        if (returnedMessages) {\r\n            return returnedMessages.map((message, i) => {\r\n                return this.renderOneMessage(message, i);\r\n            }\r\n            )\r\n        } \r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    _handleInputKeyPress(e) {\r\n        if (e.key === 'Enter') {\r\n           \r\n            this.df_text_query(e.target.value);\r\n            e.target.value = '';\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.state.showBot) {\r\n            return (\r\n                <div className=\"chatbot-box\">\r\n                            <div className=\"chatbot-box-header\">\r\n                                <div className=\"chatbot-box-logo\">\r\n                                    <img src=\"https://cdn-icons-png.flaticon.com/128/2706/2706950.png\" alt=\"\" width=\"42\" height=\"45\" />\r\n                                    <img src=\"/images/green-online-circle.png\" alt=\"\" width=\"10\" height=\"10\" style={{position: 'absolute', right:267, bottom:425}}/>\r\n                                </div>\r\n                                    <div className=\"chatbot-box-description\">\r\n                                        <span className=\"chatbot--bot--name\">Bot Online Assistant</span>\r\n                                    </div>\r\n                                    <div className=\"chatbot-box-options\">\r\n                                        <a href=\"/\" ><img src=\"https://cdn-icons-png.flaticon.com/128/25/25429.png\" alt=\"\" width=\"20\" height=\"20\" /></a>\r\n                                        <a href=\"/\"  onClick={this.hide}><img src=\"https://cdn-icons.flaticon.com/png/128/2821/premium/2821377.png?token=exp=1648711979~hmac=4aa6630a1f9413dab0d67502551cde0d\" alt=\"\" width=\"20\" height=\"20\"  ></img></a>\r\n                                        <a href =\"https://www.wipdata.com/\" style={{position: 'absolute',right:6, bottom:410, fontSize: '7px', color: 'white'}}>POWERED BY WIPDATA <img src=\"https://www.wipdata.com/wp-content/uploads/2019/09/5.png\" alt=\"\" width=\"10\" height=\"10\"></img></a>\r\n                                    </div> \r\n                            </div>\r\n\r\n                    \r\n                    {/* //Chatbot Inner Layout */}\r\n\r\n                    <div id=\"chatbot\"  style={{ \r\n                     \r\n                        height: 371,\r\n                        width:'100%', \r\n                        overflow: 'auto'\r\n                        }}>\r\n                        {this.renderMessages(this.state.messages)} \r\n                        <div ref={(el) => { this.messagesEnd = el; }}\r\n                             style={{ float:\"left\"}}>\r\n                        </div>\r\n                    </div>\r\n                \r\n                    <div style = {{display: 'inline-block'}}>   \r\n                    <input style={{\r\n                            height: '50px',\r\n                            width: '100%', \r\n                            backgroundColor: 'whitesmoke', \r\n                            borderRadius: \"0px 0px 10px 10px\"}} \r\n                            ref={(input) => { this.talkInput = input; }} placeholder=\"Type a message:\"  onKeyPress={this._handleInputKeyPress} id=\"user_says\" type=\"text\" />\r\n                    <FileUpload/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    \r\n                    <div style = {{ position: 'absolute', bottom: 0, right: 15}}>\r\n                        <a href=\"/\" onClick={this.show}> <img src = \"https://img.icons8.com/color/2x/chat.png\" style={{width:\"50px\"}}></img></a>\r\n                    </div>\r\n                    \r\n                    <div ref={(el) => { this.messagesEnd = el; }}\r\n                         style={{ float:\"left\", clear: \"both\" }}>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n//export default Chatbot;\r\nexport default withRouter(Chatbot);","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\n// import { ChakraProvider } from \"@chakra-ui/react\"\r\n\r\nimport Header from './Header';\r\nimport Landing from './pages/Landing';\r\nimport About from './pages/About';\r\nimport Shop from './shop/Shop';\r\nimport Chatbot from './chatbot/Chatbot';\r\n\r\n\r\nconst App = () => \r\n    (\r\n        <div>\r\n            <BrowserRouter>\r\n                <div>\r\n                    <Header/>\r\n                    <Route exact path=\"/\" component={Landing} />\r\n                    <Route exact path=\"/about\" component={About} />\r\n                    <Route exact path=\"/shop\" component={Shop} />\r\n                    <Chatbot/>\r\n                </div>\r\n            </BrowserRouter> \r\n        </div>\r\n    )\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport 'materialize-css/dist/css/materialize.min.css';\n\n\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}